openapi: "3.0.0"
info:
  version: 0.3.0
  title: Workflows API
  description: 'The workflow API enables the developer to specify a multiple message workflow. A workflow follows a template. The first one we are adding is the failover template. The failover template instructs the messaging API to first send a message to the specified channel. If that message fails immediately or if the condition_status is not reached within the given time period the next message is sent. The developer will also recieve status webhooks from the messages resource for each delivery and read event.'
servers:
  - url: https://api.nexmo.com/beta
paths:
  /workflows:
    post:
      security:
        - bearerAuth: []
      summary: Create a workflow
      operationId: createWorkflow
      requestBody:
        description: Create a workflow request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createWorkflow'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      callbacks:
        message-status:
          '{$request.body#/callback}':
            post:
              summary: Message Status
              operationId: message-status
              x-example-path: '/webhooks/message-status'
              description: staus of the message read or delivered etc.
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/MessageStatus'
              responses:
                  '200':
                    description: Your server returns this code if it accepts the callback
        final-report:
          '{$request.body#/callback}':
            post:
              summary: Final Report
              operationId: final-report
              x-example-path: '/webhooks/final-report'
              description: staus of the final webhook
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/finalReport'
              responses:
                  '200':
                    description: Your server returns this code if it accepts the callback

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    createWorkflow:
      type: object
      properties:
        template:
          description: 'The template that the workflow API will execute. For the initial version of the API the only available value will be failover'
          type: string
          enum:
            - failover
        workflow:
          description: 'Contains a message object that must reflect the current /messages resource. All parameters within the content object reflect the /messages docs.'
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/sendMessage'
              - $ref: '#/components/schemas/sendWithFailoverMessage'

    sendMessage:
      type: object
      description: 'Send Message'
      required:
        - to
        - from
        - message
      properties:
        to:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              enum:
                - sms
                - viber_service_msg
                - messenger
            id:
              type: string
              example: '1341127079312546'
            number:
              type: string
              minLength: 11
              maxLength: 12
              pattern: '\d{11,12}'
              example: '447899663987'
            name:
              required:
                - first_name
                - last_name
              type: object
              properties:
                first_name:
                  type: string
                  example: 'Hugh'
                last_name:
                  type: string
                  example: 'Hopkins'
        from:
          required:
            - type
          type: object
          properties:
            type:
              type: string
              enum:
                - sms
                - viber_service_msg
                - messenger
            id:
              type: string
              example: '1753206581582102'
            number:
              type: string
              example: '12034858953'
        message:
          required:
            - content
          type: object
          properties:
            content:
              required:
                - type
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - text
                    - image
                    - audio
                    - video
                    - file
                    - event
                  example: 'text'
                text:
                  type: string
                  minLength: 1
                  maxLength: 1000
                  example: 'Pretty majestical, aye?'
                event:
                  type: string
                  enum:
                    - subscribe
                    - unsubscribe
                    - block
                  example: 'subscribe'
                url:
                  type: string
                  example: 'http://hughhopkins.co.uk/assets/img/youtube-sailing-hughhopkins.jpg'
            viber_ttl:
              type: integer
              example: 600
              minimum: 30
              maximum: 86400
            viber_expiry_text:
              type: string
              minLength: 1
              maxLength: 1000
              example: "This expiry text will be shown on iOS devices"

    sendWithFailoverMessage:
      type: object
      description: Send With Failover Message
      required:
        - to
        - from
        - message
      properties:
        to:
          type: object
          required:
            - type
          properties:
            type:
              type: string
              enum:
                - sms
                - viber_service_msg
                - messenger
            id:
              type: string
              example: '1341127079312546'
            number:
              type: string
              minLength: 11
              maxLength: 12
              pattern: '\d{11,12}'
              example: '447899663987'
            name:
              required:
                - first_name
                - last_name
              type: object
              properties:
                first_name:
                  type: string
                  example: 'Hugh'
                last_name:
                  type: string
                  example: 'Hopkins'
          from:
            required:
              - type
            type: object
            properties:
              type:
                type: string
                enum:
                  - sms
                  - viber_service_msg
                  - messenger
              id:
                type: string
                example: '1753206581582102'
              number:
                type: string
                example: '12034858953'
          message:
            required:
              - content
            type: object
            properties:
              content:
                required:
                  - type
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - text
                      - image
                      - audio
                      - video
                      - file
                      - event
                    example: 'text'
                  text:
                    type: string
                    minLength: 1
                    maxLength: 1000
                    example: 'Pretty majestical, aye?'
                  event:
                    type: string
                    enum:
                      - subscribe
                      - unsubscribe
                      - block
                    example: 'subscribe'
                  url:
                    type: string
                    example: 'http://hughhopkins.co.uk/assets/img/youtube-sailing-hughhopkins.jpg'
              viber_ttl:
                type: integer
                example: 600
                minimum: 30
                maximum: 86400
              viber_expiry_text:
                type: string
                minLength: 1
                maxLength: 1000
                example: "This expiry text will be shown on iOS devices"
          failover:
            required:
              - expiry_time
              - condition_status
            type: object
            properties:
              expiry_time:
                type: integer
                minimum: 30
                maximum: 86400
                example: 600
              condition_status:
                type: string
                enum:
                  - delivered
                  - read
                example: 'read'

    Response:
      required:
        - workflow_uuid
      type: object
      properties:
        worflow_uuid:
          type: string
          example: '439b7138-5dd3-41fc-ae0d-96f6d7efbcc2'

    Error:
      description: 'The error format is standardized to the 4xx/5xx range with a code and a human readable explanation.'
      required:
        - type
        - title
        - detail
        - instance
      type: object
      properties:
        type:
          type: string
          example: 'https://www.nexmo.com/messages/Errors#InvalidParams'
        detail:
          type: string
          example: 'Your request parameters did not validate.'
        instance:
          type: string
          example:
        invalid_parameters:
          type: object
          properties:
            name:
              type: string
              example: 'Invalid `from` parameter'
            reason:
              type: string
              example: 'Invalid `from` parameter'

    MessageStatus:
      description: 'The callbacks for the message status are the same as defined in the Messaging API. The only difference will be that workflow_uuid and link will be appended.'
      type: object
      properties:
        message_uuid:
          type: string
          example: '171b3991-49b0-4dfa-badd-2bc6e68b57b4'
        to:
          required:
            - type
          type: object
          properties:
            type:
              type: string
              enum:
                - sms
                - viber_service_msg
                - messenger
            id:
              type: string
              example: '1341127079312546'
            number:
              minLength: 11
              maxLength: 12
              pattern: '\d{11,12}'
              type: string
              example: '447899663987'
            name:
              required:
                - first_name
                - last_name
              type: object
              properties:
                first_name:
                  type: string
                  example: 'Hugh'
                last_name:
                  type: string
                  example: 'Hopkins'
        from:
          required:
            - type
          type: object
          properties:
            type:
              type: string
              enum:
                - sms
                - viber_service_msg
                - messenger
            id:
              type: string
              example: '1753206581582102'
            number:
              type: string
              example: '12034858953'
        timestamp:
          type: string
          format: date-time
          example: '2018-01-12T15:01:55.315Z'
        status:
          type: string
          enum:
            - submitted
            - delivered
            - read
            - rejected
        error:
          type: object
          properties:
            code:
              type: integer
              example: 1300
            reason:
              type: string
              example: 'Not part of the provider network'
        usage:
          type: object
          properties:
            currency:
              type: string
              enum:
                - EUR
            price:
              type: string
              example: '0.03'
        _links:
          type: object
          properties:
            workflow:
              type: object
              properties:
                workflow_uuid:
                  type: string
                  example: '439b7138-5dd3-41fc-ae0d-96f6d7efbcc2'
                href:
                  type: string
                  example: 'workflows/439b7138-5dd3-41fc-ae0d-96f6d7efbcc2'

    finalReport:
      description: 'The final workflow callback is sent when: The condition_status was met within the expiry_time. If we take the example API call above. If we received a delivered status at 300 seconds (within the expiry_time) the workflow would be marked as completed. We would not send an SMS. We would then send the final callback.
        The final message in the failover is delivered.
        If the message Errors on the last step we will send the final callback.
        Please note: GET is not currently supported. You will notice we have an href to a resource in some of the callbacks. These will fail to load but we wanted to maintain the same structure so that we can seamlessly integrate GET later.'
      type: object
      properties:
        workflow_uuid:
          type: string
          example: '439b7138-5dd3-41fc-ae0d-96f6d7efbcc2'
        template:
          type: string
          enum:
            - failover
          example: failover
        status:
          type: string
          enum:
            - completed
            - error
          example: completed
        timestamp:
          type: string
          format: date-time
          example: '2018-01-16T12:46:54.437Z'
        usage:
          type: object
          properties:
            price:
              type: string
              example: "0.02"
            currency:
              type: string
              enum:
                - EUR
              example: 'EUR'
        _links:
          type: object
          properties:
            messages:
              type: array
              items:
                type: object
                properties:
                  message_uuid:
                    type: string
                    example: '8b8d3cf1-40b9-463a-a39a-c1ceb1ad050a'
                  href:
                    type: string
                    example: '8b8d3cf1-40b9-463a-a39a-c1ceb1ad050a'
                  channel:
                    type: string
                    enum:
                      - messenger
                      - viber_sevice_msg
                      - sms
                    example: viber_service_msg
                  usage:
                    type: object
                    properties:
                      price:
                        type: string
                        example: "0.018"
                      currency:
                        type: string
                        enum:
                          - EUR
                        example: 'EUR'
                  status:
                    type: string
                    enum:
                      - submitted
                      - delivered
                      - read
                      - rejected
                      - undeliverable
