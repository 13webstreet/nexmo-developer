var http = require('http')
var url = require('url')
var crypto = require('crypto');

var security_secret = 'SECURITY_SECRET';
// create the http server
http.createServer(function (request, response) {

  if(request.method=='POST') {
      //Do something for post request
      console.log("post message");
  }
  else if(request.method=='GET') {
      //Turn the query string onto an object
      var url_parts = url.parse(request.url,true).query;
      if (url_parts.hasOwnProperty('sig')){

        //Compare the local time with the timestamp
        var now = Math.floor(new Date() / 1000);
        var message_timestamp = url_parts.timestamp;

        //Message cannot be more than 5 minutes old
        var max_delta = 5 * 60;
        difference = Math.abs( now - message_timestamp );
        if (difference > max_delta)
            console.log("Timestamp difference greater than 5 minutes");
        else {
            //Sort the parameters
            message_signature = url_parts.sig;
            //Remove the signature from the request parameters
            delete url_parts.sig;

            //Create the signing url using the sorted parameters and your SECURITY_SECRET
            var param_array = new Array();
            for (key in url_parts) {
                param_array.push(key + '=' + unescape(url_parts[key]));
            }
            var sorted_params = param_array.sort();
            var signing_url = '&' + sorted_params.join('&') + security_secret ;

            //Add your md5 hash of your parameters to your parameters
            var generated_signature = crypto.createHash('md5').update(signing_url).digest('hex');
            //A timing attack safe string comparison to validate hash
            var valid = 0;
            for (var i = 0; i < generated_signature.length; ++i) {
                valid |= (generated_signature.charCodeAt(i) ^ message_signature.charCodeAt(i));
            }

            if (valid == 0)
              console.log("Message was sent by Nexmo");
            else
              console.log("Alert: message not sent by Nexmo!");
        }

      }
  }
  //Send the 200 ok to Nexmo so you don't get sent the DLR again.
  response.writeHead(200, {"Content-Type": "text/html"});
  response.write("hello iain");
  response.end();

}).listen(80);
